/*
 * Copyright (c) 2021 Tom Butcher
 *
 * SPDX-License-Identifier: MIT
 */

 // standard build command: west build -b adafruit_feather_nrf52840 -- -DSHIELD=space_invader

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

// Layer Defs
#define DFLT	0
#define DFLT_NM	1
#define QWERTY	2
#define QWER_NM	3
#define NUM		4
#define SYM		5
#define NAV		6
#define MOUSE	7	// Uses AHK for now
#define FN		8	
#define EMOJI	9	// Reserved for future use 
#define CMP		10	// Reserved for future use
#define STAY	11

// Mouse Key defs--For use until AHK can be ditched
#define WH_DN	(F16)
#define WH_UP	(F17)
#define WH_L	(KP_N7)
#define WH_R	(KP_N9)
#define M_UP	(KP_N8)
#define M_DN	(KP_N5)
#define M_L		(KP_N4)
#define M_R		(KP_N6)
#define M_UP_SL	(LC(LG(LA(M_UP))))		// These move the mouse slowly
#define M_DN_SL	(LC(LG(LA(M_DN))))
#define M_R_SL	(LC(LG(LA(M_R))))
#define M_L_SL	(LC(LG(LA(M_L))))
#define M_MB	(KP_DIVIDE)
#define M_LB	(KP_MINUS)
#define M_RB	(KP_MULTIPLY)

// F Key subs (use with AHK)
#define KP_PLS	(F18)
#define KP_COM	(F19)
#define KP_SMC	(F20)
#define KP_EMJ	(F21)
#define KP_CMP	(F23)
#define KP_SLP	(F24)

// Other defs
#define xxx		&none	
#define ___		&trans
#define HYPER	(LG(LA(LS(LCTRL))))		  // If I want to send a hypered key, then I might need to make a custom behavior
// #define HYPER	(LG(LA(LS(LCTRL))))   // Maybe try to make a custom mod kp?

&mt { quick_tap_ms = <200>; };
&lt { quick_tap_ms = <200>; };

/ {

	behaviors {
		// #include "hold-tap.dtsi"				// Couldn't figure out how to get this working. Maybe try with combos or something?
												// See https://github.com/dxmh/zmk-config/tree/5c2baa8f0bd68a88fa61ef5521f0cd11c05870b7/config
		// Hold-Tap Behaviors
		hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
			quick_tap_ms = <150>;
			// retro-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
		as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AutoShift";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            // quick_tap_ms = <-1>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
		cm: custom_mods {							// Is there a difference between this and hm?
            compatible = "zmk,behavior-hold-tap";
            label = "Custom Mods";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
		fm: fast_mods {								// The same as homerow mods except with a much faster quick_tap setting
            compatible = "zmk,behavior-hold-tap";
            label = "fast mods";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
			quick_tap_ms = <75>;
			// retro-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
		sm: sticky_mod_layer {						// For using a sticky key tap with layer tap
            compatible = "zmk,behavior-hold-tap";
            label = "Sticky Mod-Layer Tap";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
			quick_tap_ms = <0>;
			// retro-tap;
            flavor = "tap-preferred";
            bindings = <&mo>, <&sk>;
        };
		// hyp: hyper_mod {						// For doing a hyper modifier
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "Hyper Mod";
        //     #binding-cells = <2>;
        //     tapping_term_ms = <150>;
		// 	quick_tap_ms = <0>;
		// 	// retro-tap;
        //     flavor = "tap-preferred";
        //     bindings = <LG(LA(LS(LCTRL(&kp))))>, <&kp>;
        // };
		// mm: macro_mod {						// An attempt to send a macro with a hold-tap behavior... didn't work
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "macro_mods";
        //     #binding-cells = <2>;
        //     tapping_term_ms = <150>;
		// 	quick_tap_ms = <0>;
		// 	// retro-tap;
        //     flavor = "tap-preferred";
        //     bindings = <&mcz>, <&kp>;
        // };

		// Mod-Morph Behaviors
        comcol: comma_colon {
			compatible = "zmk,behavior-mod-morph";
			label = "COMMA_COLON";
			#binding-cells = <0>;
			bindings = <&kp COMMA>, <&kp KP_SMC>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		dotcol: dot_colon {
			compatible = "zmk,behavior-mod-morph";
			label = "DOT_COLON";
			#binding-cells = <0>;
			bindings = <&kp DOT>, <&kp COLON>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		intbang: interobang {
			compatible = "zmk,behavior-mod-morph";
			label = "INTEROBANG";
			#binding-cells = <0>;
			bindings = <&kp QMARK>, <&kp EXCL>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		lgthan: less_greater_than {
			compatible = "zmk,behavior-mod-morph";
			label = "LESS_GREATER_THAN";
			#binding-cells = <0>;
			bindings = <&as GT LT>, <&kp GT>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		revplus: reverse_plus {							// Uses AHK to reverse the shift order of + and =
			compatible = "zmk,behavior-mod-morph";
			label = "REVERSE_PLUS";
			#binding-cells = <0>;
			bindings = <&as F18 PLUS>, <&kp F18>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		dotcom: dot_comma {
			compatible = "zmk,behavior-mod-morph";
			label = "DOT_COMMA";
			#binding-cells = <0>;
			bindings = <&as KP_COM DOT>, <&kp KP_COM>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		zeroleft: zero_left_parenthesis {
			compatible = "zmk,behavior-mod-morph";
			label = "ZERO_LEFT_PARENTHESIS";
			#binding-cells = <0>;
			bindings = <&as LPAR N0>, <&kp LPAR>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		bootsleep: bootloader_sleep {
			compatible = "zmk,behavior-mod-morph";
			label = "BOOTLOADER_SLEEP";
			#binding-cells = <0>;
			bindings = <&bootloader>, <&kp KP_SLP>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};

		// Tap-Dance Behaviors
		tdq: tap_dance_quotes {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_quotes";
            #binding-cells = <0>;
            tapping_term_ms = <200>;
            bindings = <&kp SQT>, <&kp DQT>;
        };
		tdbt: tap_dance_bluetooth {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_bluetooth";
            #binding-cells = <0>;
            tapping_term_ms = <200>;
            bindings = <&bt BT_SEL 0>, <&bt BT_SEL 1>, <&bt BT_SEL 2>, <&bt BT_SEL 3>, <&bt BT_SEL 4>;
        };

		// // Macro Behaviors
		// mcz: m_ctrl_z {
		// 	compatible = "zmk,behavior-macro";
        //     label = "macro_ctrl_z";
        //     #binding-cells = <0>;
        //     bindings = <&kp LC(Z)>;
		// };
	};

    combos {

		/*                  KEY POSITIONS									// NB: This assumes that the numbers go by the adaptive matrix positions,
																				   rather than absolute matrix positions (which would have different
  		╭────────────────────╮          ╭────────────────────╮  	╭────╮		   numbers after the encoder button).
  		│  0   1   2   3   4 │          │  5   6   7   8   9 │  ╭───╯ 41 ╰───╮
  		│ 10  11  12  13  14 │   ╭──╮   │ 15  16  17  18  19 │  │ 42  43  44 │
  		│ 20  21  22  23  24 ╰───╮25╭───╯ 26  27  28  29  30 │  ╰───╮ 45 ╭───╯
  		│ 31 ╭──╮ 32  33  34  35 │‾‾│ 36  37  38  39╭──╮  40 │      ╰────╯
        ╰────╯  ╰────────────────╯  ╰───────────────╯  ╰─────╯                */

        compatible = "zmk,combos";

        combo_qwerty {
            timeout-ms = <150>;
            key-positions = <0 1 2 3>;  // Q W F P
            bindings = <&tog QWERTY>;
        };
		combo_reset {
            timeout-ms = <150>;
            key-positions = <6 7 8 9>;  // L U Y '
            bindings = <&reset>;
        };
		combo_sleep {
            timeout-ms = <50>;
            key-positions = <3 4 5 6>;  // P B J L
            bindings = <&kp KP_SLP>;
        };
		// combo_shift1 {
        //     timeout-ms = <50>;
        //     key-positions = <12 13>;  // S T
        //     bindings = <&sk LSHFT>;
        // };
		// combo_shift2 {
        //     timeout-ms = <50>;
        //     key-positions = <16 17>;  // N E
        //     bindings = <&sk RSHFT>;
        // };
		combo_caps_word {
            timeout-ms = <50>;
            key-positions = <10 11 12>;  // A R S
            bindings = <&caps_word>;
        };
		combo_caps_lock {
            timeout-ms = <50>;
            key-positions = <10 11 12 13>;  // A R S T
            bindings = <&kp CAPS>;
        };
		combo_stay_layer {
            timeout-ms = <50>;
            key-positions = <16 17 18 19>;  // N E I O
            bindings = <&tog STAY>;
        };
		combo_ctrl_w {
            timeout-ms = <50>;
            key-positions = <37 38 39>;  // SPACE COMP END
            bindings = <&kp LC(W)>;
		};

		combo_mods_cmk {
			timeout-ms = <150>;
            key-positions = <20 21 22 23>;  // Z X C D
			layers = <0 1>;
            bindings = <&tog DFLT_NM>;
		};
		combo_mods_qwer {
			timeout-ms = <150>;
            key-positions = <20 21 22 23>;  // Z X C D [Z X C V]
			layers = <2 3>;
            bindings = <&tog QWER_NM>;
		};
    };

	keymap {
		compatible = "zmk,keymap";

							// -------------------------------------------------TEMPLATE-------------------------------------------------
							// |      |      |      |      |      |                                  |      |      |      |      |      |
							// |      |      |      |      |      |                                  |      |      |      |      |      |
							// |      |      |      |      |      |             |      |             |      |      |      |      |      |
							// |      |------|      |      |      |      |      	          |      |      |      |      |------|      |
							// |----------------------------------|      |      |      |      |      |----------------------------------|
							// ----------------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------EMPTY TEMPLATE-----------------------------------------------------------------------------
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮	 		  			    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮

//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	 					    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤

//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	   ╭─────────────╮      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤

//├─────────────┴───┬─────────┼─────────────┼─────────────┼─────────────┼──────╰──────╮──────╯──────┼─────────────┼─────────────┼─────────────┼─────────┬───┴─────────────┤

//╰─────────────────╯		  ╰─────────────┴─────────────┴─────────────┴─────────────╯─────────────┴─────────────┴─────────────┴─────────────╯	   		╰─────────────────╯
//																		  		 ╭─────────╮

//																	   ╭─────────┼─────────┼─────────╮

//																	   ╰─────────┼─────────┼─────────╯

//																				 ╰─────────╯



		default_layer { 
			label = "Default Layer";
			// -------------------------------------------------COLEMAK--------------------------------------------------
			// |  Q   |  W   |  F   |  P   |  B   |                                  |  J   |  L   |  U   |  Y   |  '"  |
			// |  A   |  R   |  S   |  T   |  G   |                                  |  M   |  N   |  E   |  I   |  O   |
			// |  Z   |  X   |  C   |  D   |  V   |             | Mute |             |  K   |  H   |  ,;  |  .:  |  /?  |  // In the future, maybe change back to interobang
			// |  Esc |------| Home | Left | Space| Tab  |      	          | Enter| Bspc | Rght |  End |------|  Del |  // Although maybe slash is more common than exclamation mark?
			// |----------------------------------| Left |  Up  | Enter| Down | Rght |----------------------------------|
			// ----------------------------------------------------------------------------------------------------------
			// ------------------------------------------------HOLD LAYER------------------------------------------------
			// |      |      |      |      |      |                                  |      |      |      |      | Stay |
			// | LWin | LAlt | LShft| LCtrl| LCAlt|                                  | RCAlt| RCtrl| RShft| RAlt | RWin |
			// |      |      |      |      |      |             |      |             |      |      |      |      |      |
			// |  Fn  |------| LCtrl| Emoji| Nav  | Mouse|      	          | Num  | RShft| Cmp  | RWin |------| Media|
			// |----------------------------------|      |      |      |      |      |----------------------------------|
			// ----------------------------------------------------------------------------------------------------------

			bindings = <
//--------------------------------------------------------------------------------COLEMAK---------------------------------------------------------------------------------
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮	 		  			    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
  	&kp Q		  &kp W			&kp F		  &kp P			&kp B									  &kp J			&kp L		  &kp U			&kp Y		  &tdq			// &lt STAY APOS
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	 					    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  	&hm LWIN A	  &hm LALT R	&hm LSHFT S	  &hm LCTRL T	&kp G									  &kp M			&hm RCTRL N	  &hm RSHFT E	&hm RALT I	  &hm RWIN O
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	   ╭─────────────╮      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
&fm LC(LG(Z)) Z	  &fm LC(LG(X)) X &fm LC(LG(C)) C &fm LC(LG(V)) D &fm LC(LG(Y)) V &kp C_MUTE		  &kp K			&kp H		  &comcol		&dotcol		  &kp SLASH
//├─────────────┴───┬─────────┼─────────────┼─────────────┼─────────────┬──────╰──────╮──────╯──────┬─────────────┼─────────────┼─────────────┴─────────┬───┴─────────────┤
	&lt FN ESC			  &mt LCTRL HOME &cm KP_EMJ LS(TAB) &sm NAV LSHFT &lt MOUSE TAB	&lt NUM BSPC &hm RSHFT SPACE &cm KP_CMP DEL &mt RWIN END             &lt SYM RET
//╰─────────────────╯		  ╰─────────────┴─────────────┴─────────────┴─────────────╯─────────────┴─────────────┴─────────────┴─────────────╯	   		╰─────────────────╯
//																		  		 ╭─────────╮
																				  &kp UP
//																	   ╭─────────┼─────────┼─────────╮
															   			&kp LEFT  &kp RET	&kp RIGHT
//																	   ╰─────────┼─────────┼─────────╯
																				  &kp DOWN
//																				 ╰─────────╯
			>;

			sensor-bindings = <&inc_dec_kp WH_DN WH_UP>;
		};

		default_no_mods_layer { // Just turns off hm mods, so no need for the whole keymap diagram
			label = "Default No Mods Layer";
			bindings = <___ ___	___ ___ ___ ___ ___ ___ ___ ___ &kp A &kp R &kp S &kp T ___ ___ &kp N &kp E &kp I &kp O ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
						___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___>;
			sensor-bindings = <&inc_dec_kp WH_DN WH_UP>;
		};

		qwerty_layer {
			label = "QWERTY";
			bindings = <
//---------------------------------------------------------------------------------QWERTY---------------------------------------------------------------------------------
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮	 		  			    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	&kp Q		  &kp W			&kp E		  &kp R			&kp T									  &kp Y			&kp U		  &kp I			&kp O		  &kp P 		// &lt STAY APOS
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	 					    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	&hm LWIN A	  &hm LALT S	&hm LSHFT D	  &hm LCTRL F	&kp G									  &kp H			&hm RCTRL K	  &hm RSHFT L	&hm RALT COLON &tdq
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	   ╭─────────────╮      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	&kp Z		  &kp X			&kp C		  &kp V			&kp B				 ___				  &kp N			&kp M		  &kp COMMA		&kp DOT		  &kp SLASH
//├─────────────┴───┬─────────┼─────────────┼─────────────┼─────────────┬──────╰──────╮──────╯──────┬─────────────┼─────────────┼─────────────┴─────────┬───┴─────────────┤
	___			  				___			  ___			___			  ___			___			  ___			___			  ___						  ___	
//╰─────────────────╯		  ╰─────────────┴─────────────┴─────────────┴─────────────╯─────────────┴─────────────┴─────────────┴─────────────╯	   		╰─────────────────╯
//																		  		 ╭─────────╮
																				   ___	
//																	   ╭─────────┼─────────┼─────────╮
																		 ___	   ___		 ___	
//																	   ╰─────────┼─────────┼─────────╯
																				   ___	
//																				 ╰─────────╯
			>;

			sensor-bindings = <&inc_dec_kp WH_DN WH_UP>;
		};

		qwerty_no_mods_layer { // Just turns off hm mods, so no need for the whole keymap diagram
			label = "QWERTY No Mods Layer";
			bindings = <___ ___	___ ___ ___ ___ ___ ___ ___ ___ &kp A &kp S &kp D &kp F ___ ___ &kp K &kp L &kp COLON &kp APOS ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
						___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___>;
			sensor-bindings = <&inc_dec_kp WH_DN WH_UP>;
		};

		number_layer {
			label = "Number Layer";
			
			// --------------------------------------------------NUMBER--------------------------------------------------
			// |  [{  |  1!  |  2@  |  3#  |  -_  |                                  |      |  \|  |  `~  |      |      |
			// |  ]}  |  4$  |  5%  |  6^  |  =+  |                                  | BSPC | RCTRL| RSHFT| RALT | RWIN |
			// |  <>  |  7&  |  8*  |  9(  |  \|  |             |      |             |      |      |  ,;  |  .:  |      |
			// | DFLT |------| SPACE|  .,  |  0(  |  0)  |      	          |      |      |      |      |------|      |
			// |----------------------------------|      |      |      |      |      |----------------------------------|
			// ----------------------------------------------------------------------------------------------------------

			bindings = < // All numbers use auto-shift for symbols
//---------------------------------------------------------------------------------NUMBERS---------------------------------------------------------------------------------
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮	 		  				╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	&as LBRC LBKT &as AMPS N7	&as ASTRK N8  &as LPAR N9 	&as UNDER MINUS							  &as PIPE BSLH &as TILDE GRAVE xxx		  	xxx			  xxx
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	 						├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	&as RBRC RBKT &as DLLR N4	&as PRCNT N5  &as CARET N6	&revplus								  &kp BSPC		&kp RCTRL	  &kp RSHFT		&kp RALT	  &kp RWIN
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	   ╭─────────────╮		├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	&lgthan		  &as EXCL N1	&as AT N2	  &as HASH N3	&as QMARK SLASH	  	 ___	     		  xxx			xxx		   &as KP_SMC COMMA &as COLON DOT xxx	
//├─────────────┴───┬─────────┼─────────────┼─────────────┼─────────────┬──────╰──────╮──────╯──────┬─────────────┼─────────────┼─────────────┴─────────┬───┴─────────────┤
	&to DFLT					&kp SPACE	  &dotcom		&zeroleft	  &as RPAR N0	&tog NUM	  ___		 	___			  ___						  ___	
//╰─────────────────╯		  ╰─────────────┴─────────────┴─────────────┴─────────────╯─────────────┴─────────────┴─────────────┴─────────────╯	   		╰─────────────────╯
//																		  		 ╭─────────╮
																				   ___	
//																	   ╭─────────┼─────────┼─────────╮
																		 ___	   ___		 ___	
//																	   ╰─────────┼─────────┼─────────╯
																				   ___	
//																				 ╰─────────╯
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		symbol_layer {
			label = "Symbol Layer";
			bindings = <
//---------------------------------------------------------------------------------SYMBOLS--------------------------------------------------------------------------------
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮	 		  			    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	&kp LBRC	  &kp AMPS		&kp ASTRK	  &kp LPAR		&kp UNDER					     		  &kp PIPE		&kp TILDE	  &kp UP			xxx			  xxx	
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	 					    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	&kp RBRC	  &kp DLLR		&kp PRCNT	  &kp CARET		&kp EQUAL								  &kp BSPC		&kp LEFT	  &kp DOWN    	&kp RIGHT	  &kp RWIN
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	   ╭─────────────╮      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	&kp GT		  &kp EXCL		&kp AT		  &kp HASH		&kp QMARK		  	 ___				  xxx			&kp LC(LEFT)  xxx			&kp LC(RIGHT)  xxx	
//├─────────────┴───┬─────────┼─────────────┼─────────────┼─────────────┬──────╰──────╮──────╯──────┬─────────────┼─────────────┼─────────────┴─────────┬───┴─────────────┤
	&to DFLT					&dotcom		  &kp SPACE		&kp LPAR	  &kp RPAR	    ___			  ___			___			  ___						  &tog SYM
//╰─────────────────╯		  ╰─────────────┴─────────────┴─────────────┴─────────────╯─────────────┴─────────────┴─────────────┴─────────────╯	   		╰─────────────────╯
//																		  		 ╭─────────╮
																				   ___	
//																	   ╭─────────┼─────────┼─────────╮
																		 ___	   ___		 ___	
//																	   ╰─────────┼─────────┼─────────╯
																				   ___	
//																				 ╰─────────╯
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		navigation_layer {
			label = "Navigation Layer";
			bindings = <
//-------------------------------------------------------------------------------NAVIGATION-------------------------------------------------------------------------------
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮	 		  			    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	&as LBRC LBKT &as AMPS N7	&as ASTRK N8  &as LPAR N9 	&as UNDER MINUS							  &kp WH_UP   	&kp HOME	  &kp UP		&kp END		  &kp PG_UP
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	 					    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  	&as RBRC RBKT &as DLLR N4	&as PRCNT N5  &as CARET N6	&revplus								  &kp WH_DN   	&kp LEFT	  &kp DOWN    	&kp RIGHT 	  &kp PG_DN
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	   ╭─────────────╮      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	&lgthan		  &as EXCL N1	&as AT N2	  &as HASH N3	&as QMARK SLASH	     &kp LC(W)			  xxx			&kp LC(LEFT)  xxx			&kp LC(RIGHT) xxx	
//├─────────────┴───┬─────────┼─────────────┼─────────────┼─────────────┬──────╰──────╮──────╯──────┬─────────────┼─────────────┼─────────────┴─────────┬───┴─────────────┤
	&to DFLT					&kp RET		  ___			&tog NAV	  ___		  	&kp LC(BSPC)  ___			&kp LC(DEL)	  ___						  ___	
//╰─────────────────╯		  ╰─────────────┴─────────────┴─────────────┴─────────────╯─────────────┴─────────────┴─────────────┴─────────────╯	   		╰─────────────────╯
//																		  		 ╭─────────╮
																				   ___	
//																	   ╭─────────┼─────────┼─────────╮
																	&kp LC(LEFT)   ___		 &kp LC(RIGHT)
//																	   ╰─────────┼─────────┼─────────╯
																				   ___	
//																				 ╰─────────╯
			>;

			sensor-bindings = <&inc_dec_kp LC(TAB) LS(LC(TAB))>;	// Scroll tabs
		};

		mouse_layer {  // todo: Mouse not yet implemented in ZMK. Using AHK in the meantime
			label = "Mouse Layer";
			bindings = <
//----------------------------------------------------------------------------------MOUSE---------------------------------------------------------------------------------
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮	 		  			    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	___			  ___			___			  ___			___										  &kp WH_UP		&kp WH_L	  &kp M_UP		&kp WH_R	  xxx	
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	 					    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	&kp LWIN	  &kp LALT		&kp LSHFT	  &kp LCTRL		&kp HYPER								  &kp WH_DN		&kp M_L		  &kp M_DN		&kp M_R		  xxx	
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	   ╭─────────────╮      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	&kp LC(Z)	  &kp LC(X)		&kp LC(C)	  &kp LC(V)		&kp LC(Y)			 ___				  xxx			&kp M_L_SL	  &kp M_DN_SL	&kp M_UP_SL	  &kp M_R_SL
//├─────────────┴───┬─────────┼─────────────┼─────────────┼─────────────┬──────╰──────╮──────╯──────┬─────────────┼─────────────┼─────────────┴─────────┬───┴─────────────┤
	&to DFLT					___			  ___			___			  &tog MOUSE	&kp M_MB	  &kp M_LB		&kp M_RB	  ___						  ___	
//╰─────────────────╯		  ╰─────────────┴─────────────┴─────────────┴─────────────╯─────────────┴─────────────┴─────────────┴─────────────╯	   		╰─────────────────╯
//																		  		 ╭─────────╮
																				   ___	
//																	   ╭─────────┼─────────┼─────────╮
																		 ___	   ___		 ___	
//																	   ╰─────────┼─────────┼─────────╯
																				   ___	
//																				 ╰─────────╯
			>;

			sensor-bindings = <&inc_dec_kp WH_DN WH_UP>;
		};

		function_layer {
			label = "Function Layer";
			bindings = <
//--------------------------------------------------------------------------------FUNCTION--------------------------------------------------------------------------------
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮	 		  			    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	&kp CAPS	  ___	 		&tdbt		  ___			&kp INS									  &bt BT_CLR	&kp F7		  &kp F8		&kp F9		  &kp F12
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	 						├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	&kp LWIN	  &kp LALT	 &mt LSHFT LC(S)  &kp LCTRL		&kp HYPER								  &bt BT_NXT	&kp F4		  &kp F5		&kp F6		  &kp F11
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	   ╭─────────────╮      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	&kp LC(Z)	  &kp LC(X)		&kp LC(C)	  &kp LC(V)		&kp LC(Y)   		 &bootsleep			  &bt BT_PRV	&kp F1		  &kp F2		&kp F3		  &kp F10
//├─────────────┴───┬─────────┼─────────────┼─────────────┼─────────────┬──────╰──────╮──────╯──────┬─────────────┼─────────────┼─────────────┴─────────┬───┴─────────────┤
	&tog FN						___			  &kp C_PREV	&kp C_PP	  &kp C_NEXT	&kp LC(BSPC)  ___			&kp LC(DEL)	  ___						  ___	
//╰─────────────────╯		  ╰─────────────┴─────────────┴─────────────┴─────────────╯─────────────┴─────────────┴─────────────┴─────────────╯	   		╰─────────────────╯
//																		  		 ╭─────────╮
																				   &kp LG(UP)
//																	   ╭─────────┼─────────┼─────────╮
																	  &kp LG(LEFT) &kp RET	 &kp LG(RIGHT)
//																	   ╰─────────┼─────────┼─────────╯
																				   &kp LG(DOWN)
//																				 ╰─────────╯
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		emoji_layer { // todo: Unicode (including emoji) not yet implemented in ZMK. Maybe try using AHK in the meantime?
			label = "Emoji Layer";
			bindings = <
//----------------------------------------------------------------------------------EMOJI---------------------------------------------------------------------------------
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮	 		  			    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	&kp Q		  ___			___			  ___			___										  ___			___			  ___			___			  ___	
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	 					    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	___			  ___			___			  ___			___										  ___			___			  ___			___			  ___	
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	   ╭─────────────╮      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	___			  ___			___			  ___			___					 ___				  ___			___			  ___			___			  ___	
//├─────────────┴───┬─────────┼─────────────┼─────────────┼─────────────┬──────╰──────╮──────╯──────┬─────────────┼─────────────┼─────────────┴─────────┬───┴─────────────┤
	&to DFLT		  			___			  &tog EMOJI	___			  ___			___			  ___			___			  ___						  ___	
//╰─────────────────╯		  ╰─────────────┴─────────────┴─────────────┴─────────────╯─────────────┴─────────────┴─────────────┴─────────────╯	   		╰─────────────────╯
//																		  		 ╭─────────╮
																				   ___	
//																	   ╭─────────┼─────────┼─────────╮
																		 ___	   ___		 ___	
//																	   ╰─────────┼─────────┼─────────╯
																				   ___	
//																				 ╰─────────╯
			>;

			sensor-bindings = <&inc_dec_kp WH_DN WH_UP>;
		};

		compose_layer { // todo: unicode not yet implemented in ZMK. Maybe try using AHK in the meantime?
			label = "Compose Layer";
			bindings = <
//---------------------------------------------------------------------------------COMPOSE--------------------------------------------------------------------------------
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮	 		  			    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	&kp Q		  ___			___			  ___			___										  ___			___			  ___			___			  ___	
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	 					    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	___			  ___			___			  ___			___										  ___			___			  ___			___			  ___	
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	   ╭─────────────╮      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	___			  ___			___			  ___			___					 ___				  ___			___			  ___			___			  ___	
//├─────────────┴───┬─────────┼─────────────┼─────────────┼─────────────┬──────╰──────╮──────╯──────┬─────────────┼─────────────┼─────────────┴─────────┬───┴─────────────┤
	&tog EMOJI	  				___			  ___			___			  ___			___			  ___			___			  &tog CMP					  ___	
//╰─────────────────╯		  ╰─────────────┴─────────────┴─────────────┴─────────────╯─────────────┴─────────────┴─────────────┴─────────────╯	   		╰─────────────────╯
//																		  		 ╭─────────╮
																				   ___	
//																	   ╭─────────┼─────────┼─────────╮
																		 ___	   ___		 ___	
//																	   ╰─────────┼─────────┼─────────╯
																				   ___	
//																				 ╰─────────╯
			>;

			sensor-bindings = <&inc_dec_kp WH_DN WH_UP>;
		};

		stay_layer {	// This layer is for toggling the layers (rather than just holding them on). Can be replaced in the future with double-taps or something
			label = "Stay Layer";
			bindings = <
//-------------------------------------------------------------------------------STAY  LAYER-------------------------------------------------------------------------------
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮	 		  			    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	&kp Q		  ___			___			  ___			___										  ___			___			  ___			___			  ___	
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	 					    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	___			  ___			___			  ___			___										  ___			___			  ___			___			  ___	
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤	   ╭─────────────╮      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	___			  ___			___			  ___			___					 ___				  ___			___			  ___			___			  ___	
//├─────────────┴───┬─────────┼─────────────┼─────────────┼─────────────┬──────╰──────╮──────╯──────┬─────────────┼─────────────┼─────────────┴─────────┬───┴─────────────┤
	&tog FN						___			  &tog EMOJI	&tog NAV	  &tog MOUSE	&tog NUM	  &kp CAPS 		&tog CMP	  ___						  &tog SYM
//╰─────────────────╯		  ╰─────────────┴─────────────┴─────────────┴─────────────╯─────────────┴─────────────┴─────────────┴─────────────╯	   		╰─────────────────╯
//																		  		 ╭─────────╮
																				   ___	
//																	   ╭─────────┼─────────┼─────────╮
																		 ___	   ___		 ___	
//																	   ╰─────────┼─────────┼─────────╯
																				   ___	
//																				 ╰─────────╯
			>;

			sensor-bindings = <&inc_dec_kp WH_DN WH_UP>;
		};
	};
};
