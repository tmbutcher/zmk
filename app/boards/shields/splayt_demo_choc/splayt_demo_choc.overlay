/*
 * Copyright (c) 2021 Tom Butcher
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/trackball_pim447.h> // for PIM447_MOVE and PIM447_SCROLL constants.

/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

	kscan0: kscan_0 {
        compatible = "zmk,kscan-composite";
        label = "KSCAN_COMP";
        rows = <5>;
        columns = <5>;

        direct: direct {
            kscan = <&kscan_direct>;
        };

        matrix: matrix {
            kscan = <&kscan_matrix>;
            row-offset = <1>;
			column-offset = <1>;
        };
	};

    kscan_direct: kscan_1 {
        compatible = "zmk,kscan-gpio-direct";
        label = "KSCAN_DIRECT";

        input-gpios
            = <&gpio1 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
			//, <&gpio1 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // pin specifically for capacitive
            ;
    };

    kscan_matrix: kscan_2 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN_MATRIX";

        diode-direction = "row2col";
		col-gpios
			= <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;

		row-gpios
			= <&gpio0 2 GPIO_ACTIVE_HIGH>
			, <&gpio0 29 GPIO_ACTIVE_HIGH>
			, <&gpio1 6 GPIO_ACTIVE_HIGH>
			, <&gpio0 31 GPIO_ACTIVE_HIGH>
            , <&gpio0 11 GPIO_ACTIVE_HIGH>
			;
    };

    	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <6>;
		rows = <0>;
// 					| RN1 | RN2 | RN3 | RN4 | RN5 |
// 					| RT1 | RT2 | RT3 | RT4 | RT5 |
// 					| RM1 | RM2 | RM3 | RM4 | RM5 | RM6 |
// 					| RB1 | RB2 | RB3 | RB4 | RB5 | Cap1 |
//    				    | RH4 | RH5 |
//	  			  | RH3 |
//   	       | RH2 |
//	  		   | RH1 |

        map = <

		//				 ╭─────────┬─────────┬─────────┬─────────┬─────────╮
          				   RC(1,1)   RC(1,2)   RC(1,3)   RC(1,4)   RC(1,5) 
        //				 ├─────────┼─────────┼─────────┼─────────┼─────────┤
          				   RC(2,1)   RC(2,2)   RC(2,3)   RC(2,4)   RC(2,5)      
        //				 ├─────────┼─────────┼─────────┼─────────┼─────────┤─────────╮
          				   RC(3,1)   RC(3,2)   RC(3,3)   RC(3,4)   RC(3,5)   RC(0,0)
        //				 ├─────────┼─────────┼─────────┼─────────┼─────────┤─────────┤
          				   RC(4,1)   RC(4,2)   RC(4,3)   RC(4,4)   RC(4,5) //RC(?,?)  
        //				 ╰─────╭───┴─────┬───┴─────╮───┴─────────┴─────────┴─────────╯
							     RC(5,4)   RC(5,5)
		//			╭──────────┼─────────┴─────────╯	
  		  			   RC(5,3)  
		//		╭───╰─────╮────╯											  
 			      RC(5,2)  
		//		├─────────┤
				  RC(5,1)
		//		╰─────────╯												  
        >;
	};
};

&pro_micro_i2c {
	status = "okay";
	trackball_pim447@a {
		compatible = "pimoroni,trackball_pim447";
		reg = <0xa>;
		label = "TRACKBALL_PIM447";

		move-factor = <2>;
		invert-move-x;
		invert-move-y;
		scroll-divisor = <2>;
		invert-scroll-x;
		invert-scroll-y;
		mode = <PIM447_SCROLL>;
	};
};
